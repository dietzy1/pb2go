package server

import (
	"context"

	"go.uber.org/zap"
	"google.golang.org/grpc"
)

func loggingMiddleware(
	logger *zap.Logger,
) grpc.UnaryServerInterceptor {
	return func(
		ctx context.Context,
		req interface{},
		info *grpc.UnaryServerInfo,
		handler grpc.UnaryHandler,
	) (interface{}, error) {
		logger.Info("gRPC method", zap.String("method", info.FullMethod))

		resp, err := handler(ctx, req)

		// You can log the response and error here if needed.
		// For example:
		if err != nil {
			logger.Error("gRPC method encountered an error", zap.Error(err))
		} else {
			logger.Info("gRPC method completed successfully")
		}

		return resp, err
	}
}
