package server

import (
	"context"

	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"

	pb "github.com/{{.GithubName}}/{{.ServiceName}}/proto/{{.ServiceName}}/v1"

)

type domain interface {
	{{range .Rpc}}
	{{.RpcName}}(ctx context.Context, req *pb.{{.RequestName}}) (*pb.{{.ResponseName}}, error)
	{{end}}
}


	{{range .Rpc}}
func (s *server) {{.RpcName}}(ctx context.Context, req *pb.{{.RequestName}}) (*pb.{{.ResponseName}}, error) {
	// Implementation goes here...

	res, err := s.domain.{{.RpcName}}(ctx, req)
	if err != nil {
		return nil, status.Error(codes.Internal, err.Error())
	}


	return res, nil
	}
{{end}}
